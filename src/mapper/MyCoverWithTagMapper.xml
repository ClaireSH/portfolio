<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myCoverWithTag">
	<!-- 
		본래 패키지를 포함한 타입의 클래스이름명을 사용하나
		typeAlias에 등록된 Alias값을 사요할 수 도 있음
	 -->
	 
	<resultMap type="Tag" id="TagResult">
 		<result property = "tagName" column = "tagName"/>
		<result property = "myCoverId" column = "myCoverId"/>
 	</resultMap>
	 
	<resultMap type="MyCoverWithTag" id="MyCoverWithTagResult">
		<id property="myCoverId" column="myCoverId"/>
		<result property = "resumeId" column ="resumeId"/>
		<result property = "versionName" column = "versionName" />
		<result property = "content" column = "content"/>
 	</resultMap>
 	
 	
 	

 	
 	<select id="selectMyCoverListByResumeId" parameterType="String" resultMap="MyCoverWithTagResult">
 		 select myCoverId, resumeId, versionName, content 
 		 from MyCover
 		 where resumeId = #{resumeId}	
 	</select>
 	
 	<select id="selectTagList" parameterType="String" resultMap="TagResult">
 		SELECT * FROM Tag WHERE myCoverId = #{myCoverId}
 	</select>
 	
 	<insert id="insertMyCover" parameterType="vo.MyCoverWithTag">
 		insert into MyCover(myCoverId, resumeId, versionName, content) 
 		values(#{myCoverId}, #{resumeId}, #{versionName}, #{content})
 	</insert>
 	
 	<insert id="insertTag" parameterType="vo.Tag">
 		 insert into tag values(#{tagName}, #{myCoverId});		
 	</insert>
 	
 	<delete id="deleteTagByMyCoverId" parameterType="String">
 		delete from Tag
 		where myCoverId = #{myCoverId}
 	</delete>

 	<update id="updateMyCover" parameterType="vo.MyCoverWithTag">
 		update MyCover
 		set versionName = #{versionName},
 			content = #{content}
 		where myCoverId = #{myCoverId}
 	</update>
 	
 	<delete id="deleteMyCover" parameterType="String">
 		delete from myCover
 		where myCoverId = #{myCoverId}
 	</delete>
 	
</mapper>