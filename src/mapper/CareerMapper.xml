<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="career">
	<!-- 
		본래 패키지를 포함한 타입의 클래스이름명을 사용하나
		typeAlias에 등록된 Alias값을 사요할 수 도 있음
	 -->
	<resultMap type="Career" id="CareerResult">
		<id property="careerId" column="careerId"/>
		<result property = "resumeId" column ="resumeId"/>
		<result property = "joinYear" column = "joinYear"/>
		<result property = "retirementYear" column = "retirementYear" />
		<result property = "companyName" column = "companyName" />
		<result property = "businessType" column = "businessType" />
		<result property = "department" column ="department"/>
		<result property = "position" column ="position"/>
 	</resultMap>
 	
 	<select id="allCareerById" parameterType="String" resultMap="CareerResult">
 		 select *
 		 from CAREER
 		 where resumeId = #{resumeId}		
 	</select>
 	
 	<insert id="insertCareer" parameterType="vo.Career">
 		insert into Career(careerId, resumeId, joinYear, retirementYear, companyName, businessType, department, position) 
 		values(
 			#{careerId}, 
 			#{resumeId}, 
 			#{joinYear, jdbcType=VARCHAR}, 
 			#{retirementYear, jdbcType=VARCHAR}, 
 			#{companyName, jdbcType=VARCHAR}, 
 			#{businessType, jdbcType=VARCHAR}, 
 			#{department, jdbcType=VARCHAR}, 
 			#{position, jdbcType=VARCHAR}
 		)
 	</insert>
 	
 	<update id="mergeCareer" parameterType="vo.Career">
 		MERGE INTO Career A
		USING (
			select 
				#{careerId} careerId, 
 				#{resumeId} resumeId, 
 				#{joinYear, jdbcType=VARCHAR} joinYear, 
 				#{retirementYear, jdbcType=VARCHAR} retirementYear, 
 				#{companyName, jdbcType=VARCHAR} companyName, 
 				#{businessType, jdbcType=VARCHAR} businessType, 
 				#{department, jdbcType=VARCHAR} department, 
 				#{position, jdbcType=VARCHAR} position
			from dual
		) B
		ON (A.careerId = B.careerId)
		WHEN MATCHED THEN
			update set
				joinYear = #{joinYear, jdbcType=VARCHAR}, 
 				retirementYear = #{retirementYear, jdbcType=VARCHAR}, 
 				companyName = #{companyName, jdbcType=VARCHAR}, 
 				businessType = #{businessType, jdbcType=VARCHAR}, 
 				department = #{department, jdbcType=VARCHAR}, 
 				position = #{position, jdbcType=VARCHAR}
 		WHEN NOT MATCHED THEN
 			INSERT (
 				A.careerId, A.resumeId, A.joinYear, A.retirementYear, A.companyName, A.businessType, A.department, A.position) 
 			VALUES(
 				#{careerId}, 
	 			#{resumeId}, 
	 			#{joinYear, jdbcType=VARCHAR}, 
	 			#{retirementYear, jdbcType=VARCHAR}, 
	 			#{companyName, jdbcType=VARCHAR}, 
	 			#{businessType, jdbcType=VARCHAR}, 
	 			#{department, jdbcType=VARCHAR}, 
	 			#{position, jdbcType=VARCHAR}
 			)
 	</update>
 	
 	<update id="updateCareer" parameterType="vo.Career">
 		update Career
 		set resumeId = #{resumeId},
 			joinYear = #{joinYear},
 			retirementYear = #{retirementType},
 			companyName = #{businessType},
 			department = #{department},
 			position = #{position}
 		where careerId = #{careerId}
 	</update>
 	
 	<delete id="deleteCareerById" parameterType="String">
 		delete from career
 		where resumeId = #{loginId}
 	</delete>
 	
</mapper>