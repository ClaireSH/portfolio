<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="academicBg">
	<!-- 
		본래 패키지를 포함한 타입의 클래스이름명을 사용하나
		typeAlias에 등록된 Alias값을 사요할 수 도 있음
	 -->
	<resultMap type="AcademicBg" id="AcademicBgResult">
		<id property="academicBgId" column="academicBgId"/>
		<result property = "resumeId" column ="resumeId"/>
		<result property = "adminssionYear" column = "adminssionYear"/>
		<result property = "graduationYear" column = "graduationYear" />
		<result property = "schoolName" column = "schoolName" />
		<result property = "major" column = "major" />
		<result property = "degree" column ="degree"/>
		<result property = "remarks" column ="remarks"/>
 	</resultMap>
 	
 	<select id="allAcademicBgId" parameterType="String" resultMap="AcademicBgResult">
 		 select *
 		 from ACADEMICBG
 		 where resumeId = #{resumeId}		
 	</select>
 	
 	<update id="mergeAcademicBg" parameterType="vo.AcademicBg">
 		MERGE INTO Academic A
		USING (
			select 
				#{academicBgId} academicBgId, 
 				#{resumeId} resumeId, 
 				#{adminssionYear, jdbcType=VARCHAR} admicssionYear, 
 				#{graduationYear, jdbcType=VARCHAR} graduationYear ,
 				#{schoolName, jdbcType=VARCHAR} schoolName, 
 				#{major, jdbcType=VARCHAR} major, 
 				#{degree, jdbcType=VARCHAR} degree, 
 				#{remarks, jdbcType=VARCHAR} remarks
			from dual
		) B
		ON (A.academicBgId = B.academicBgId)
		WHEN MATCHED THEN
		update set
			adminssionYear = #{adminssionYear, jdbcType=VARCHAR},
 			graduationYear = #{graduationYear, jdbcType=VARCHAR},
 			schoolName = #{schoolName, jdbcType=VARCHAR},
 			major = #{major, jdbcType=VARCHAR},
 			degree = #{degree, jdbcType=VARCHAR},
 			remarks =#{remarks, jdbcType=VARCHAR}
 		WHEN NOT MATCHED THEN
 			INSERT (
 				A.academicBgId, A.resumeId, A.adminssionYear, A.graduationYear, A.schoolName, A.major, A.degree, A.remarks) 
 			VALUES(
 				#{academicBgId}, 
 				#{resumeId}, 
 				#{adminssionYear, jdbcType=VARCHAR}, 
 				#{graduationYear, jdbcType=VARCHAR}, 
 				#{schoolName, jdbcType=VARCHAR}, 
 				#{major, jdbcType=VARCHAR}, 
 				#{degree, jdbcType=VARCHAR}, 
 				#{remarks, jdbcType=VARCHAR}
 			)
 	</update>
 	
 	<insert id="insertAcademicBg" parameterType="vo.AcademicBg">
 		insert into ACADEMICBG
 			(academicBgId, resumeId, adminssionYear, graduationYear, schoolName, major, degree, remarks)
 		values
 			(
 				#{academicBgId}, 
 				#{resumeId}, 
 				#{adminssionYear, jdbcType=VARCHAR}, 
 				#{graduationYear, jdbcType=VARCHAR}, 
 				#{schoolName, jdbcType=VARCHAR}, 
 				#{major, jdbcType=VARCHAR}, 
 				#{degree, jdbcType=VARCHAR}, 
 				#{remarks, jdbcType=VARCHAR}
 			)
 	</insert>
 	
 	<update id="updateAcademicBg" parameterType="vo.AcademicBg">
		update AcademicBg
		set resumeId = #{resumeId},
			adminssionYear = #{adminssionYear},
			graduationYear = #{graduationYear},
			schoolName = #{schoolName},
			major = #{major},
			degree = #{degree},
			remarks = #{remarks}
		where academicBgId = #{academicBgId}
	</update>
 	
 	<delete id="deleteAcademicBgById" parameterType="String">
 		delete from AcademicBg
 		where resumeId = #{loginId}
 	</delete>
</mapper>